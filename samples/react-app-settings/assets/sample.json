[
  {
    "name": "pnp-sp-dev-spfx-web-parts-react-app-settings",
    "source": "pnp",
    "title": "App settings web part",
    "shortDescription": "This sample shows how AppSettings.ts file can be added and used within SharePoint Framewrok webparts similar to the Web.config / App.config key value app settings in .NET Framework projects. That allows better DevOps and continuous integration (CI/CD) automation. The AppSettings.ts is transpiled/compiled with your SPFx solution which differs from the way the web.config. With .Net web.config file we would be able to update independently without the need of compiling DLLs. If that behavior is required, you can store your app settings in a SharePoint list and change them from there. However, that will have performance degradation over if the setting was part of the SPFx code where the logic can get a setting value in milliseconds.",
    "url": "https://github.com/pnp/sp-dev-fx-webparts/tree/main/samples/react-app-settings",
    "longDescription": [
      "This sample shows how AppSettings.ts file can be added and used within SharePoint Framewrok webparts similar to the Web.config / App.config key value app settings in .NET Framework projects. That allows better DevOps and continuous integration (CI/CD) automation. The AppSettings.ts is transpiled/compiled with your SPFx solution which differs from the way the web.config. With .Net web.config file we would be able to update independently without the need of compiling DLLs. If that behavior is required, you can store your app settings in a SharePoint list and change them from there. However, that will have performance degradation over if the setting was part of the SPFx code where the logic can get a setting value in milliseconds."
    ],
    "creationDateTime": "2019-03-03",
    "updateDateTime": "2019-03-03",
    "products": [
      "SharePoint"
    ],
    "metadata": [
      {
        "key": "CLIENT-SIDE-DEV",
        "value": "React"
      },
      {
        "key": "SPFX-VERSION",
        "value": "1.7.1"
      },
      {
        "key": "SPFX-FULLPAGEAPP",
        "value": "true"
      }
    ],
    "thumbnails": [
      {
        "type": "image",
        "order": 100,
        "url": "https://github.com/pnp/sp-dev-fx-webparts/raw/main/samples/react-app-settings/assets/app-settings-class.PNG",
        "alt": "App settings web part"
      },
      {
        "type": "image",
        "order": 101,
        "url": "https://github.com/pnp/sp-dev-fx-webparts/blob/main/samples/react-app-settings/assets/spfx-appSettings-json.PNG?raw=true",
        "alt": "App settings web part"
      }
    ],
    "authors": [
      {
        "gitHubAccount": "VelinGeorgiev",
        "company": "",
        "pictureUrl": "https://github.com/VelinGeorgiev.png",
        "name": "Velin Georgiev"
      }
    ],
    "references": [
      {
        "name": "Build your first SharePoint client-side web part",
        "description": "Client-side web parts are client-side components that run in the context of a SharePoint page. Client-side web parts can be deployed to SharePoint environments that support the SharePoint Framework. You can also use modern JavaScript web frameworks, tools, and libraries to build them.",
        "url": "https://learn.microsoft.com/sharepoint/dev/spfx/web-parts/get-started/build-a-hello-world-web-part"
      },
      {
        "name": "Using single part app pages in SharePoint Online",
        "description": "Single part app pages provide a capability to host SharePoint Framework web parts or Microsoft Teams applications in SharePoint Online with a locked layout. End users cannot modify or configure the page that is using the Single Part App Page layout.",
        "url": "https://learn.microsoft.com/sharepoint/dev/spfx/web-parts/single-part-app-pages?tabs=pnpposh"
      }
    ],
    "downloadUrl": "https://pnp.github.io/download-partial/?url=https://github.com/pnp/sp-dev-fx-webparts/tree/main/samples/react-app-settings"
  }
]